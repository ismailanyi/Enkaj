{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/actions/bookings.ts"],"sourcesContent":["\"use server\";\n\nimport { BASE_URL } from \"@/constants\";\nimport { ApiRtrn } from \"@/types\";\n\ntype Args = {\n  name: string;\n  email: string;\n  demoDate: string;\n};\n\nexport const saveDemoBooking = async (args: Args): Promise<ApiRtrn> => {\n  try {\n    const response = await fetch(`${BASE_URL}/booking-demo`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(args),\n      credentials: \"include\",\n    });\n\n    const resp = await response.json();\n\n    if (!response.ok) {\n      return {\n        success: false,\n\n        ...(resp?.error && {\n          message: resp.error,\n        }),\n      };\n    }\n\n    return {\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n    };\n  }\n};\n\nexport const addToWaitingList = async (email: string): Promise<ApiRtrn> => {\n  try {\n    const response = await fetch(`${BASE_URL}/waitinglist`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email }),\n      credentials: \"include\",\n    });\n\n    const resp = await response.json();\n\n    if (!response.ok) {\n      return {\n        success: false,\n\n        ...(resp?.error && {\n          message: resp.error,\n        }),\n      };\n    }\n\n    return {\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n    };\n  }\n};\n"],"names":[],"mappings":";;;;;;IAWa;IA+BA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/app/_components/Waiting.tsx"],"sourcesContent":["\"use client\";\nimport { addToWaitingList, saveDemoBooking } from \"@/actions/bookings\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nconst getCurrentDateTime = () => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, \"0\");\n  const day = String(now.getDate()).padStart(2, \"0\");\n  const hours = String(now.getHours()).padStart(2, \"0\");\n  const minutes = String(now.getMinutes()).padStart(2, \"0\");\n  return `${year}-${month}-${day}T${hours}:${minutes}`;\n};\n\nconst Waiting = () => {\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  const [demoDate, setDemoDate] = useState<string>(getCurrentDateTime());\n\n  const [showDemoForm, setShowDemoForm] = useState<boolean>(false);\n  const [email, setEmail] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [submitted, setSubmitted] = useState<boolean>(false);\n\n  useEffect(() => {\n    const targetDate = new Date(\"2025-03-01\").getTime();\n\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const difference = targetDate - now;\n\n      setTimeLeft({\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(\n          (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n        ),\n        minutes: Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)),\n        seconds: Math.floor((difference % (1000 * 60)) / 1000),\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleDemoSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // Here you would typically handle the form submission\n\n    const sentBooking = await saveDemoBooking({\n      name,\n      email,\n      demoDate,\n    });\n\n    if (!sentBooking.success) {\n      if (sentBooking?.message) {\n        toast.dismiss();\n        toast.error(sentBooking.message);\n      }\n\n      return;\n    }\n\n    setSubmitted(true);\n\n    setTimeout(() => {\n      setShowDemoForm(false);\n      setSubmitted(false);\n      setDemoDate(\"\");\n      setEmail(\"\");\n      setName(\"\");\n    }, 3000);\n  };\n\n  const handleWaitlistSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // Here you would typically handle the waitlist submission\n\n    const addedToWL = await addToWaitingList(email);\n\n    if (!addedToWL.success) {\n      if (addedToWL?.message) {\n        toast.dismiss();\n        toast.error(addedToWL.message);\n      }\n\n      return;\n    }\n\n    setSubmitted(true);\n    setTimeout(() => {\n      setSubmitted(false);\n      setEmail(\"\");\n    }, 3000);\n  };\n\n  const handleDateChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setDemoDate(e.target.value);\n  };\n  return (\n    <div className=\"min-h-screen flex flex-col lg:flex-row font-['Roboto']\">\n      {/* Left Section */}\n      <div className=\"w-full lg:w-1/2 min-h-screen bg-gray-900 p-8 flex items-center justify-center\">\n        <div className=\"max-w-xl mx-auto\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-16 h-16 mx-auto mb-8 text-white animate-pulse\"\n            viewBox=\"0 0 24 24\"\n          >\n            <g\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n            >\n              <path d=\"M10 2h4m-2 12l3-3\"></path>\n              <circle cx=\"12\" cy=\"14\" r=\"8\"></circle>\n            </g>\n          </svg>\n          <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-bold mb-4 text-white text-center\">\n            Enkaj | Home\n          </h1>\n          <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-medium mb-6 text-gray-300 text-center\">\n            Your Perfect Space, Anytime, Anywhere\n          </h2>\n          <p className=\"text-xl md:text-2xl text-white leading-relaxed mb-12\">\n            Enkaj is a comprehensive real estate web application that\n            streamlines the entire process of finding and booking ideal spaces.\n            It empowers users to effortlessly search, shortlist, and reserve\n            their desired properties, while also providing robust management\n            tools for property owners and managers to efficiently oversee their\n            portfolios.\n          </p>\n\n          {/* TikTok Link */}\n          <div className=\"flex justify-center\">\n            <a\n              href=\"https://www.tiktok.com/@enkaaj?_t=ZM-8twXXrGUNlN&_r=1\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-white/80 hover:text-white transition-colors\n                   transform hover:scale-110 transition-all duration-300\n                   flex items-center gap-2 text-lg font-medium\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                className=\"w-6 h-6\"\n              >\n                <path d=\"M19.59 6.69a4.83 4.83 0 0 1-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 0 1-5.2 1.74 2.89 2.89 0 0 1 2.31-4.64 2.93 2.93 0 0 1 .88.13V9.4a6.84 6.84 0 0 0-1-.05A6.33 6.33 0 0 0 5 20.1a6.34 6.34 0 0 0 10.86-4.43v-7a8.16 8.16 0 0 0 4.77 1.52v-3.4a4.85 4.85 0 0 1-1-.1z\" />\n              </svg>\n              Follow us on TikTok\n            </a>\n          </div>\n        </div>\n      </div>\n\n      {/* Right Section */}\n      <div className=\"w-full lg:w-1/2 min-h-screen bg-white p-8 flex items-center justify-center relative\">\n        <div className=\"max-w-xl mx-auto\">\n          {/* Countdown Timer */}\n          <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-12\">\n            {[\n              { label: \"Days\", value: timeLeft.days },\n              { label: \"Hours\", value: timeLeft.hours },\n              { label: \"Minutes\", value: timeLeft.minutes },\n              { label: \"Seconds\", value: timeLeft.seconds },\n            ].map((item) => (\n              <div\n                key={item.label}\n                className=\"bg-gray-50 rounded-lg p-4 shadow-md\"\n              >\n                <div className=\"text-3xl sm:text-4xl font-bold text-gray-800\">\n                  {item.value}\n                </div>\n                <div className=\"text-sm uppercase tracking-wider text-gray-600\">\n                  {item.label}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* CTA Buttons */}\n          <div className=\"flex flex-col sm:flex-row justify-center gap-4 mb-12\">\n            <button\n              className=\"px-8 py-4 bg-yellow-400 text-black rounded-lg font-semibold \n                     transform hover:scale-105 transition-all duration-300 ease-in-out\n                     shadow-lg hover:shadow-yellow-400/50\n                     animate-[bounce_1s_ease-in-out_infinite]\"\n              onClick={() => setShowDemoForm(true)}\n            >\n              Book a Demo\n            </button>\n          </div>\n\n          {/* Waitlist Form */}\n          <form onSubmit={handleWaitlistSubmit} className=\"max-w-md mx-auto\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"flex-1 px-4 py-3 rounded-lg bg-gray-50 border border-gray-300 \n                     text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-yellow-400\n                     transform transition-all duration-300 focus:scale-105\"\n                required\n              />\n              <button\n                type=\"submit\"\n                className=\"px-6 py-3 bg-teal-500 text-white rounded-lg font-semibold \n                      hover:bg-teal-600 transition-all duration-300\n                      transform hover:scale-105\"\n              >\n                Join Waitlist\n              </button>\n            </div>\n            {submitted && (\n              <p className=\"text-green-500 text-center mt-2\">\n                Thank you for joining our waitlist!\n              </p>\n            )}\n          </form>\n        </div>\n\n        {/* Demo Form Modal */}\n        {showDemoForm && (\n          <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center\">\n            <div className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h3 className=\"text-2xl font-bold\">Book a Demo</h3>\n                <button\n                  onClick={() => setShowDemoForm(false)}\n                  className=\"text-gray-500 hover:text-gray-700\"\n                >\n                  {/* <X className=\"w-6 h-6\" /> */}\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"w-6 h-6\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M18 6L6 18M6 6l12 12\"\n                    ></path>\n                  </svg>\n                </button>\n              </div>\n              {!submitted ? (\n                <form onSubmit={handleDemoSubmit} className=\"space-y-4\">\n                  <div>\n                    <label\n                      htmlFor=\"name\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-400 focus:border-transparent\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-400 focus:border-transparent\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"date\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Preferred Demo Date\n                    </label>\n                    <input\n                      type=\"datetime-local\"\n                      id=\"date\"\n                      value={demoDate}\n                      min={getCurrentDateTime()}\n                      onChange={handleDateChange}\n                      //   value={demoDate}\n                      //   onChange={(e) => setDemoDate(e.target.value)}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-400 focus:border-transparent\"\n                      required\n                    />\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"w-full px-6 py-3 bg-yellow-400 text-black rounded-lg font-semibold \n                         hover:bg-yellow-500 transition-all duration-300\"\n                  >\n                    Schedule Demo\n                  </button>\n                </form>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <p className=\"text-green-500 text-lg font-medium\">\n                    Thank you! We'll be in touch soon to confirm your demo.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Waiting;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/node_modules/next/src/client/components/router-reducer/router-reducer-types.ts"],"sourcesContent":["import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  previousTree,\n  serverResponse,\n}: {\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport type RouterNavigate = (\n  href: string,\n  navigateType: 'push' | 'replace',\n  shouldScroll: boolean\n) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n"],"names":["ACTION_HMR_REFRESH","ACTION_NAVIGATE","ACTION_PREFETCH","ACTION_REFRESH","ACTION_RESTORE","ACTION_SERVER_ACTION","ACTION_SERVER_PATCH","PrefetchCacheEntryStatus","PrefetchKind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAYaA,kBAAkB,EAAA;eAAlBA;;IAJAC,eAAe,EAAA;eAAfA;;IAGAC,eAAe,EAAA;eAAfA;;IAJAC,cAAc,EAAA;eAAdA;;IAEAC,cAAc,EAAA;eAAdA;;IAIAC,oBAAoB,EAAA;eAApBA;;IAHAC,mBAAmB,EAAA;eAAnBA;;IA4MDC,wBAAwB,EAAA;eAAxBA;;IAhEAC,YAAY,EAAA;eAAZA;;;AA/IL,MAAML,iBAAiB;AACvB,MAAMF,kBAAkB;AACxB,MAAMG,iBAAiB;AACvB,MAAME,sBAAsB;AAC5B,MAAMJ,kBAAkB;AACxB,MAAMF,qBAAqB;AAC3B,MAAMK,uBAAuB;AAyI7B,IAAKG,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;;;;WAAAA;;AAgEL,IAAKD,2BAAAA,WAAAA,GAAAA,SAAAA,wBAAAA;;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/node_modules/next/src/client/app-call-server.ts"],"sourcesContent":["import { startTransition, useCallback } from 'react'\nimport {\n  ACTION_SERVER_ACTION,\n  type ReducerActions,\n  type ServerActionDispatcher,\n} from './components/router-reducer/router-reducer-types'\n\nlet globalServerActionDispatcher = null as ServerActionDispatcher | null\n\nexport function useServerActionDispatcher(\n  dispatch: React.Dispatch<ReducerActions>\n) {\n  const serverActionDispatcher: ServerActionDispatcher = useCallback(\n    (actionPayload) => {\n      startTransition(() => {\n        dispatch({\n          ...actionPayload,\n          type: ACTION_SERVER_ACTION,\n        })\n      })\n    },\n    [dispatch]\n  )\n  globalServerActionDispatcher = serverActionDispatcher\n}\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  const actionDispatcher = globalServerActionDispatcher\n\n  if (!actionDispatcher) {\n    throw new Error('Invariant: missing action dispatcher.')\n  }\n\n  return new Promise((resolve, reject) => {\n    actionDispatcher({\n      actionId,\n      actionArgs,\n      resolve,\n      reject,\n    })\n  })\n}\n"],"names":["callServer","useServerActionDispatcher","globalServerActionDispatcher","dispatch","serverActionDispatcher","useCallback","actionPayload","startTransition","type","ACTION_SERVER_ACTION","actionId","actionArgs","actionDispatcher","Error","Promise","resolve","reject"],"mappings":";;;;;;;;;;;;;;;IA0BsBA,UAAU,EAAA;eAAVA;;IAjBNC,yBAAyB,EAAA;eAAzBA;;;uBAT6B;oCAKtC;AAEP,IAAIC,+BAA+B;AAE5B,SAASD,0BACdE,QAAwC;IAExC,MAAMC,yBAAiDC,CAAAA,GAAAA,OAAAA,WAAW,EAChE,CAACC;QACCC,CAAAA,GAAAA,OAAAA,eAAe,EAAC;YACdJ,SAAS;gBACP,GAAGG,aAAa;gBAChBE,MAAMC,oBAAAA,oBAAoB;YAC5B;QACF;IACF,GACA;QAACN;KAAS;IAEZD,+BAA+BE;AACjC;AAEO,eAAeJ,WAAWU,QAAgB,EAAEC,UAAiB;IAClE,MAAMC,mBAAmBV;IAEzB,IAAI,CAACU,kBAAkB;QACrB,MAAM,OAAA,cAAkD,CAAlD,IAAIC,MAAM,0CAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAiD;IACzD;IAEA,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3BJ,iBAAiB;YACfF;YACAC;YACAI;YACAC;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/node_modules/next/src/client/app-find-source-map-url.ts"],"sourcesContent":["const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n"],"names":["findSourceMapURL","basePath","process","env","__NEXT_ROUTER_BASEPATH","pathname","NODE_ENV","filename","startsWith","document","location","origin","includes","url","URL","searchParams","set","href","undefined"],"mappings":";;;;+BAGaA,oBAAAA;;;eAAAA;;;AAHb,MAAMC,WAAWC,QAAQC,GAAG,CAACC,sBAAsB,MAAI;AACvD,MAAMC,WAAY,KAAEJ,WAAS;AAEtB,MAAMD,mBACXE,QAAQC,GAAG,CAACG,QAAQ,KAAK,cACrB,SAASN,iBAAiBO,QAAgB;IACxC,IAAIA,aAAa,IAAI;QACnB,OAAO;IACT;IAEA,IACEA,SAASC,UAAU,CAACC,SAASC,QAAQ,CAACC,MAAM,KAC5CJ,SAASK,QAAQ,CAAC,kBAClB;QACA,kEAAkE;QAClE,mEAAmE;QACnE,qEAAqE;QACrE,mEAAmE;QACnE,qEAAqE;QACrE,4DAA4D;QAC5D,6CAA6C;QAC7C,OAAQ,KAAEL,WAAS;IACrB;IAEA,MAAMM,MAAM,IAAIC,IAAIT,UAAUI,SAASC,QAAQ,CAACC,MAAM;IACtDE,IAAIE,YAAY,CAACC,GAAG,CAAC,YAAYT;IAEjC,OAAOM,IAAII,IAAI;AACjB,IACAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client-edge.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactServerDOMTurbopackClientEdge\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackClientEdge"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ismailanyi/OneDrive/Documents/Folders/Projects/Others/Friends/Moha/enkajproject/front-end/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}